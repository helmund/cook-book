---
bodyClass: prose mx-auto max-w-5xl
---

{% extends 'layouts/base.njk' %}

{% block content %}
    <div itemtype="http://schema.org/Recipe">
        <div class="-mx-4 lg:-mx-8" itemprop="image">
            {% recipeimage image,
            "",
            title,
            "100vw" %}
        </div>
        <h1 class="font-serif" itemprop="name">{{ title }}</h1>
        <section>
            <div class="">
                {% if tags | length %}
                    <div class="flex overflow-x-auto py-6 mr-6 gap-4">
                        {% for tag in tags %}
                            <a class=" no-underline text-xs inline-flex items-center font-bold leading-sm uppercase px-3 py-1 whitespace-nowrap bg-green-200 text-green-700 rounded-full c-tag__tag--selected" href="/tags/{{ tag | noEmoji | slug }}">{{ tag }}</a>
                        {% endfor %}
                    </div>
                {% endif %}
                <div class="md:flex gap-4">
                    <div class="md:w-5/12 lg:w-4/12" x-data='{currentServings: {{ servings if not servings == "" else false }}, ingredients: "{{ ingredients | arrayToString }}".split("Â£") }'>
                        {% if time or not servings == "" %}
                            <div class="">
                                {% if time %}
                                    <span class="flex items-center">
                                        <span class="w-4 h-4 mr-2">{% include "icons/time.svg" %}</span>
                                        {{ time }}
                                    </span>
                                {% endif %}
                                {% if not servings == "" %}
                                    <p class="flex items-center">
                                        <template x-if="currentServings > 1">
                                            <button @click="currentServings -= 1" class="group">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 group-hover:fill-slate-400 transition-colors">
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                                </svg>
                                                <span class="sr-only">Remove 1 serving</span>
                                            </button>
                                        </template>
                                        <span x-text="currentServings" class=" px-2" itemprop="yield"></span>
                                        <button @click="currentServings += 1" class="group">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6  group-hover:fill-slate-400 transition-colors">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                            </svg>
                                            <span class="sr-only">Add 1 serving</span>
                                        </button>
                                        <span class="pl-2">{{ site.servingsLabel }}</span>
                                    </p>
                                {% endif %}
                            </div>
                        {% endif %}

                        <h3>{{ site.ingredientsLabel }}</h3>
                        <template x-if="currentServings">
                            <ul class="">
                                <template x-for="(ingredient, index) in ingredients" :key="index">
                                    <li x-text="adaptQuantity(ingredient, {{servings}}, currentServings)"></li>
                                </template>
                            </ul>
                        </template>

                        <template x-if="!currentServings">
                            <ul class="">
                                {% for ingredient in ingredients %}
                                    <li itemprop="ingredients">{{ ingredient }}</li>
                                {% endfor %}
                            </ul>
                        </template>
                    </div>

                    <div class="md:w-7/12 lg:w-8/12">
                        {% if sourceLabel and sourceURL %}
                            <p>Source : <a href="{{ sourceURL }}" target="_blank" rel="noopener">{{ sourceLabel }}</a>
                            </p>
                        {% endif %}
                        <h3 class="md:hidden">Zubereitung</h3>
                        {{ content | safe }}
                    </div>
                </div>
            </div>
            <div class="fixed bottom-0 inset-x-0 bg-white p-4 flex items-center justify-center gap-4">
                <div>
                    <button onclick="findCurrentRecipeInList();">Add To weeklyPlan</button>
                </div>
                <div>
                    <script async="async" src="//platform.getbring.com/widgets/import.js"></script>
                    <div data-bring-import="" style="display:none"></div>
                </div>
            </div>
        </section>
    </div>

    <script>
        function adaptQuantity(ingredient, originalServings, currentServings) {
            return ingredient.replace(/(\d|\.|,)+/, match => Number(Math.round(parseFloat(match) * currentServings / originalServings + 'e' + 2) + 'e-' + 2));
        }

        async function findCurrentRecipeInList() {

            try {
                let recipes = await fetch('/recipes.json').then(res => res.json())
                recipe = recipes.find(recipe => recipe.title === `{{ title }}`)
                saveCurrentRecipeInWeeklyPlan(recipe)
            } catch (error) {
                throw error;
            }

        }

        const saveCurrentRecipeInWeeklyPlan = (recipe) => {
            if (sessionStorage.getItem('weeklyPlan')) {
                let storage = JSON.parse(sessionStorage.getItem('weeklyPlan'))
                newStorage = storage
                newStorage.push(recipe)
                sessionStorage.setItem('weeklyPlan', JSON.stringify(newStorage));
            } else {
                let storage = []
                storage.push(recipe)
                sessionStorage.setItem('weeklyPlan', JSON.stringify(storage));
            }
        }
    </script>
{% endblock %}