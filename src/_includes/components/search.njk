<div class="fixed inset-0 z-50 flex items-start justify-center pt-16 sm:pt-24" x-data="{ searchResults: [], searchInput: '', matches: [] }">
    <div class="fixed inset-0 bg-slate-900/25 backdrop-blur transition-opacity opacity-100"></div>
    {# <label for="search" class="c-search__label {{ 'c-search__label--home' if homeSearch }}">{{ site.searchLabel }}&nbsp;:</label> #}
    <div class="relative w-full max-w-lg transform px-4 transition-all opacity-100 scale-100">
        <div class="overflow-hidden rounded-lg bg-white shadow-md">
            <div class="relative">
                <input type="text" id="{{ 'search-home' if homeSearch else 'search' }}" class="block w-full appearance-none bg-transparent py-4 pl-4 pr-12 text-base text-slate-900 placeholder:text-slate-600 focus:outline-none sm:text-sm sm:leading-6" x-model="searchInput" @focus="
            if (sessionStorage.getItem('searchResults')) {
                searchResults = JSON.parse(sessionStorage.getItem('searchResults'));
            } else {
                fetch('/search.json').then(res => res.json()).then(res => {
                    sessionStorage.setItem('searchResults', JSON.stringify(res));
                    searchResults = res;
                    
                });
            }
            " @input="
                matches = [];

                if (searchInput.length < 3) { return };
        
                searchResults.forEach(recipe => {
                    const matchTitle = recipe.title.toLowerCase().includes(searchInput.toLowerCase());
                    const matchIngredient = recipe.ingredients.find(ingredient => ingredient.toLowerCase().includes(searchInput.toLowerCase()));
                    const matchTag = recipe.tags.find(tag => tag.toLowerCase().includes(searchInput.toLowerCase()));
            
                    if (!matchTitle && !matchIngredient && !matchTag) { return };
            
                    const match = {...recipe};
                    if (matchTitle) { match.matchTitle = matchTitle };
                    if (matchIngredient) { match.matchIngredient = matchIngredient };
                    if (matchTag) { match.matchTag = matchTag };
            
                    matches.push(match)
                });
            ">
            </div>
            <template x-if="matches.length">
                <div class="c-search__results-wrapper">
                    <ul class="max-h-[18.375rem] divide-y divide-slate-200 overflow-y-auto rounded-b-lg border-t border-slate-200 text-sm leading-6" role="listbox">
                        <template x-for="(match, index) in matches" :key="index">
                            <li class="flex p-4 flex-col group hover:bg-slate-50" role="option" tabindex="-1">
                                <a x-bind:href="match.url" x-html="highlightText(match.title, searchInput)" class="truncate font-semibold text-slate-900 group-hover:text-sky-600"></a>
                                <template x-if="match.matchTag">
                                    <div class="c-tags__tag c-tag__tag--selected" x-html="highlightText(match.matchTag, searchInput)"></div>
                                </template>
                                <template x-if="match.matchIngredient">
                                    <p class="text-xs text-slate-600" >
                                        {{ site.searchContainsLabel }}: <span x-html="highlightText(match.matchIngredient, searchInput)"></span>
                                    </p>
                                </template>
                            </li>
                        </template>
                    </ul>
                </div>
            </template>
        </div>
        {% if homeSearch %}{% include "icons/search.svg" %}
        {% endif %}
        <button class="absolute right-8 top-4" x-show="searchInput" @click="
            searchInput = '';
            matches = [];
        " x-cloak>
            <span class="sr-only">Close</span>
            {% include "icons/close.svg" %}
        </button>
    </div>

</div>

<script>
    function highlightText(string, subString) {
        const index = string
            .toLowerCase()
            .indexOf(subString.toLowerCase());
        if (index === -1) 
            return string;
        return string.substring(0, index) + '<span class="u-highlight">' + string.substring(index, index + subString.length) + '</span>' + string.substring(index + subString.length);
    }
</script>